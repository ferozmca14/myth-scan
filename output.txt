==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ModifierEntrancy
Function name: airDrop()
PC address: 470
Estimated Gas Usage: 10107 - 66038
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: modifier_reentrancy.sol:15

tokenBalance[msg.sender] += 20

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x3, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: airDrop(), txdata: 0xca5d0880, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ModifierEntrancy
Function name: airDrop()
PC address: 486
Estimated Gas Usage: 10107 - 66038
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: modifier_reentrancy.sol:15

tokenBalance[msg.sender] += 20

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x3, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: airDrop(), txdata: 0xca5d0880, value: 0x0


